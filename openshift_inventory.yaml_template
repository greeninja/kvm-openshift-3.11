# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
glusterfs

################################
## Auth - Add your creds here ##
################################
oreg_auth_user=<RHN User>
oreg_auth_password=<RHN Password>
# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user=root
openshift_deployment_type=openshift-enterprise
## GlusterFS stuff
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=false
openshift_storage_glusterfs_block_deploy=true
openshift_storage_glusterfs_block_host_vol_size=50
openshift_storage_glusterfs_block_storageclass=true
openshift_storage_glusterfs_block_storageclass_default=false
## GlusterFS image tags
openshift_storage_glusterfs_image=registry.redhat.io/rhgs3/rhgs-server-rhel7:3.11.6-11
openshift_storage_glusterfs_block_image=registry.redhat.io/rhgs3/rhgs-gluster-block-prov-rhel7:3.11.6-3
openshift_storage_glusterfs_s3_image=registry.redhat.io/rhgs3/rhgs-s3-server-rhel7:3.11.5-1
openshift_storage_glusterfs_heketi_image=registry.redhat.io/rhgs3/rhgs-volmanager-rhel7:3.11.6-5
openshift_storage_glusterfs_registry_image=registry.redhat.io/rhgs3/rhgs-server-rhel7:3.11.6-11
openshift_storage_glusterfs_block_registry_image=registry.redhat.io/rhgs3/rhgs-gluster-block-prov-rhel7:3.11.6-3
openshift_storage_glusterfs_s3_registry_image=registry.redhat.io/rhgs3/rhgs-s3-server-rhel7:3.11.5-1
openshift_storage_glusterfs_heketi_registry_image=registry.redhat.io/rhgs3/rhgs-volmanager-rhel7:3.11.6-5
## Metrics
openshift_metrics_install_metrics=true
openshift_metrics_cassandra_storage_type=pv
openshift_metrics_cassandra_pvc_storage_class_name=glusterfs-storage-block
## Registry
openshift_hosted_registry_storage_kind=glusterfs 
openshift_hosted_registry_storage_volume_size=5Gi
openshift_hosted_registry_selector='node-role.kubernetes.io/compute=true'

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

# Native high availability cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=openshift-cluster.openshift.lab
openshift_master_cluster_public_hostname=openshift-cluster.openshift.lab
openshift_master_default_subdomain=apps.openshit.lab

# host group for masters
[masters]
master01.openshift.lab
master02.openshift.lab
master03.openshift.lab

# host group for etcd
[etcd]
master01.openshift.lab
master02.openshift.lab
master03.openshift.lab

# host group for nodes, includes region info
[nodes]
master0[1:3].openshift.lab openshift_node_group_name='node-config-master'
infra0[1:2].openshift.lab openshift_node_group_name='node-config-infra'
node0[1:3].openshift.lab openshift_node_group_name='node-config-compute'

[glusterfs]
master0[1:3].openshift.lab glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd", "/dev/vde" ]'
node0[1:3].openshift.lab glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd", "/dev/vde" ]'
